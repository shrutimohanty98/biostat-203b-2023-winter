---
title: "Biostat 203B Homework 4"
subtitle: Due Mar 24 @ 11:59PM
author: Shruti Mohanty, 705494615
format:
  html:
    theme: cosmo
    embed-resources: true
    number-sections: true
    toc: true
    toc-depth: 4
    toc-location: left
    code-fold: false
knitr:
  opts_chunk: 
    cache: false    
    echo: true
    fig.align: 'center'
    fig.width: 6
    fig.height: 4
    message: FALSE
---

Display machine information:
```{r}
#| eval: false

sessionInfo()
```
Load database libraries and the tidyverse frontend:
```{r}
#| eval: false
install.packages("splitTools")
library(bigrquery)
library(dbplyr)
library(DBI)
library(lubridate)
library(tidyverse)
library(tidymodels)
library(readr)
library(dplyr)
```

## Predicting 30-day mortality

Using the ICU cohort `icu_cohort.rds` you built in Homework 3, develop at least three analytic approaches for predicting the 30-day mortality of patients admitted to ICU using demographic information (gender, age, marital status, ethnicity), first lab measurements during ICU stay, and first vital measurements during ICU stay. For example, you can use (1) logistic regression with elastic net (lasso + ridge) penalty (e.g., glmnet or keras package), (2) random forest, (3) boosting, and (4) support vector machines, or (5) MLP neural network (keras package)

1. Partition data into 50% training set and 50% test set. Stratify partitioning according the 30-day mortality status.

**Solution:** Data Pre-processing is performed in the transform function. Numeric columns are scaled, and character columns are factored. Thirdy_day_mort column is given the values 0 or 1 based on FALSE or TRUE. After that the tibble is partitioned into train and test sets based on 30-day mortality status in 0.5 ratios. 

```{r}
icu_cohort <- readRDS("icu_cohort.rds")
```

```{r}
library(splitTools)
set.seed(100)
icu_cohort$thirty_day_mort <- 
  ifelse(icu_cohort$thirty_day_mort == "TRUE" ,1 , 0)
icu_transform <- transform(icu_cohort,
                          gender = as.factor(gender), 
                          marital_status = as.factor(marital_status),
                          ethnicity = as.factor(ethnicity),
                          thirty_day_mort = as.factor(thirty_day_mort))

# convert non-numeric variables to factors and scale numeric variables
icu_transform <- icu_transform %>%
  mutate_if(is.character, as.factor) %>%
  mutate_if(is.logical, as.factor) %>%
  mutate_if(is.numeric, scale)

sets <- partition(icu_transform$thirty_day_mort, p = c(train = 0.5, test = 0.5))
icu_train <- icu_transform[sets$train, ]
icu_test <- icu_transform[sets$test, ]
```

2. Train and tune the models using the training set.

**Solution:**

```{r}
# fit the model
model_glm =
  glm( thirty_day_mort ~ gender + anchor_age + marital_status + ethnicity +
        valuenum51301 + valuenum50882 + valuenum51221 + valuenum50912 +
        valuenum50971 + valuenum50983 + valuenum50902 +
        valuenum50931 + valuenum220181 + valuenum220179 +
        valuenum223761 + valuenum220210 + valuenum220045,
      data = icu_train, family = binomial, na.action = "na.exclude")
summary(model_glm)
```
```{r}
#(1) logistic regression "glm"
x_test <- model.matrix( ~-1 + gender + anchor_age + marital_status + ethnicity +
        valuenum51301 + valuenum50882 + valuenum51221 + valuenum50912 +
        valuenum50971 + valuenum50983 + valuenum50902 +
        valuenum50931 + valuenum220181 + valuenum220179 +
        valuenum223761 + valuenum220210 + valuenum220045, 
        data = icu_test)
```


```{r}
# predict 30-day mortality using the model
prob_logstc <- predict(model_glm, icu_test, type = "response", na.action = "na.action")
# translate probabilities to predictions by threshold = 0.5

predict_logstc <- ifelse(prob_logstc > 0.5, 1, 0)
predict_logstc = factor(predict_logstc,levels=c("0","1"))
# make confusion matrix
table(observed = icu_test$thirty_day_mort, predicted = predict_logstc)
icu_test
```
```{r}
# compute accuracy 
cat('Test accuracy', mean(predict_logstc == icu_test$thirty_day_mort))
```


3. Compare model classification performance on the test set. Report both the area under ROC curve and accuracy for each model.
